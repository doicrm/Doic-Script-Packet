{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Doic's Script Packet","text":"<p>DSP is a extension of <code>zParserExtender</code> with Union plugins containing new externals and useful hooks for Gothic 1 and Gothic 2: NotR.</p>"},{"location":"externals/ai/","title":"AI - functions for working with AI","text":""},{"location":"externals/ai/#ai_turntowp","title":"AI_TurnToWP","text":"<p>Turns an NPC to a specific waypoint in the world.</p> <pre><code>func void AI_TurnToWP(var C_NPC npc, var string wp) {};\n</code></pre> <ul> <li><code>npc</code> - NPC</li> <li><code>wp</code> - name of waypoint in the game world</li> </ul> Example usage<pre><code>AI_TurnToWP(self, \"WP_START\");\n</code></pre>"},{"location":"externals/ai/#ai_turntovob","title":"AI_TurnToVob","text":"<p>Turns an NPC to a specific freepoint or vob in the world. It works similarly to <code>AI_TurnToWP</code>.</p> <pre><code>func void AI_TurnToVob(var C_NPC npc, var string vob) {};\n</code></pre> <ul> <li><code>npc</code> - NPC</li> <li><code>vob</code> - name of freepoint or vob in the game world</li> </ul> Example usage<pre><code>AI_TurnToVob(self, \"CHEST_LOBART\");\n</code></pre>"},{"location":"externals/cast/","title":"CAST - data type conversion functions","text":""},{"location":"externals/cast/#cast_instanceisvob","title":"Cast_InstanceIsVob","text":"<p>Checks whether object is an Vob.</p> <pre><code>func int Cast_InstanceIsVob(var instance object) {};\n</code></pre> <ul> <li><code>object</code> - object to check</li> <li><code>return</code> - <code>TRUE</code> if object is an Vob, <code>FALSE</code> otherwise</li> </ul>"},{"location":"externals/hlp/","title":"HLP - help functions","text":""},{"location":"externals/hlp/#hlp_getitem","title":"Hlp_GetItem","text":"<p>Finds an item object by its instance name.</p> <pre><code>func C_Item Hlp_GetItem(var int itemInstance) {};\n</code></pre> <ul> <li><code>itemInstance</code> - instance name of the item</li> <li><code>return</code> - link to item object</li> </ul> Example usage<pre><code>var C_Item torch; torch = Hlp_GetItem(ItLsTorch);\n</code></pre>"},{"location":"externals/hlp/#hlp_isvalidvob","title":"Hlp_IsValidVob","text":"<p>Checks if vob is in the game world.</p> <pre><code>func int Hlp_IsValidVob(var instance object) {};\n</code></pre> <ul> <li><code>object</code> - any instance</li> <li><code>return</code> - <code>TRUE</code> or <code>FALSE</code></li> </ul>"},{"location":"externals/log/","title":"Log functions","text":""},{"location":"externals/log/#log_gettopicstatus","title":"Log_GetTopicStatus","text":"<p>Returns the status of diary topic.</p> <ul> <li><code>0</code> - Free</li> <li><code>1</code> - Running</li> <li><code>2</code> - Success</li> <li><code>3</code> - Failure</li> <li><code>4</code> - Obsolete</li> </ul> <pre><code>func int Log_GetTopicStatus(var string topic) {};\n</code></pre> <ul> <li><code>topic</code> - name of the topic</li> <li><code>return</code> - topic status</li> </ul> Example usage<pre><code>if (Log_GetTopicStatus(TOPIC_InnosEye) == LOG_SUCCESS)\n{\n    //...\n};\n</code></pre>"},{"location":"externals/menu/","title":"Menu functions","text":""},{"location":"externals/menu/#menu_setitemtext","title":"Menu_SetItemText","text":"<p>Sets value of specified menu item.</p> <pre><code>func void Menu_SetItemText(var string menuItemName, var string value) {};\n</code></pre> <ul> <li><code>menuItemName</code></li> <li><code>value</code> - text value to set</li> </ul> Example usage<pre><code>Menu_SetItemText(\"MENU_ITEM_PLAYERGUILD\", \"Necromancer\");\n</code></pre>"},{"location":"externals/menu/#menu_getitemtext","title":"Menu_GetItemText","text":"<p>Returns value of text on first line (<code>0</code> by default) of specific menu item.</p> <pre><code>func string Menu_GetItemText(var string menuItemName) {};\n</code></pre> <ul> <li><code>menuItemName</code></li> <li><code>return</code> - text value of menu item</li> </ul> Example usage<pre><code>var string playerGuild;\nplayerGuild = Menu_GetItemText(\"MENU_ITEM_PLAYERGUILD\");\n\nif (Hlp_StrCmp(playerGuild, \"Necromancer\"))\n{\n    //...\n};\n</code></pre>"},{"location":"externals/mob/","title":"MOB - interactive object functions","text":""},{"location":"externals/mob/#mob_setfocusname","title":"Mob_SetFocusName","text":"<p>Sets the focus name of specified oCMOB in the game world.</p> <pre><code>func void Mob_SetFocusName(var string mobName, var string focusName) {};\n</code></pre> <ul> <li><code>mobName</code></li> <li><code>focusName</code></li> </ul> Example usage<pre><code>Mob_SetFocusName(\"CHEST_LOBART\", \"MOBNAME_CHAIR\");\n</code></pre>"},{"location":"externals/mob/#mob_getfocusname","title":"Mob_GetFocusName","text":"<p>Returns focus name of specified oCMOB in the game world.</p> <pre><code>func string Mob_GetFocusName(var string mobName) {};\n</code></pre> <ul> <li><code>mobName</code></li> <li><code>return</code> - focus name of oCMOB</li> </ul> Example usage<pre><code>var string focusName;\nfocusName = Mob_GetFocusName(\"CHEST_LOBART\");\n\nif (Hlp_StrCmp(focusName, MOBNAME_CHEST))\n{\n    //...\n};\n</code></pre>"},{"location":"externals/npc/","title":"NPC - character functions","text":""},{"location":"externals/npc/#npc_isinroutinename","title":"Npc_IsInRoutineName","text":"<p>Checks if NPC is in specified routine.</p> <pre><code>func int Npc_IsInRoutineName(var C_NPC npc, var string routine) {};\n</code></pre> <ul> <li><code>npc</code> - NPC</li> <li><code>routine</code> - name of routine to check</li> <li><code>return</code> - <code>TRUE</code> if NPC is in routine, <code>FALSE</code> otherwise</li> </ul> Example usage<pre><code>if (Npc_IsInRoutineName(self, \"Start\"))\n{\n    //...\n};\n</code></pre>"},{"location":"externals/npc/#npc_equipitem","title":"Npc_EquipItem","text":"<pre><code>func void Npc_EquipItem(var C_NPC npc, var int itemInstance) {};\n</code></pre> <ul> <li><code>npc</code> - NPC</li> <li><code>itemInstance</code> - instance name of the item</li> </ul> Example usage<pre><code>Npc_EquipItem(self, ItLsTorch);\n</code></pre>"},{"location":"externals/str/","title":"String functions","text":""},{"location":"externals/str/#str_upper","title":"Str_Upper","text":"<p>Returns string with uppercase.</p> <pre><code>var string Str_Upper(var string str) {};\n</code></pre> <ul> <li><code>str</code> - string to format</li> <li><code>return</code> - formatted string</li> </ul> Example usage<pre><code>var string str; str = Str_Upper(\"Start\");\nPrint(str); // START\n</code></pre>"},{"location":"externals/str/#str_lower","title":"Str_Lower","text":"<p>Returns string with lowercase.</p> <pre><code>var string Str_Lower(var string str) {};\n</code></pre> <ul> <li><code>str</code> - string to format</li> <li><code>return</code> - formatted string</li> </ul> Example usage<pre><code>var string str; str = Str_Lower(\"Start\");\nPrint(str); // start\n</code></pre>"},{"location":"externals/str/#str_capitel","title":"Str_Capitel","text":"<p>Returns string with capitelcase.</p> <pre><code>var string Str_Capitel(var string str) {};\n</code></pre> <ul> <li><code>str</code> - string to format</li> <li><code>return</code> - formatted string</li> </ul> Example usage<pre><code>var string str; str = Str_Capitel(\"start\");\nPrint(str); // Start\n</code></pre>"},{"location":"externals/utils/","title":"Utility functions","text":""},{"location":"externals/utils/#getintarrayvalue","title":"GetIntArrayValue","text":"<p>Returns value of index in the array of integers.</p> <pre><code>func int GetIntArrayValue(var string arr, var int index) {};\n</code></pre> <ul> <li><code>arr</code> - array of integers</li> <li><code>index</code> - position of an element in an array</li> <li><code>return</code> - value of index</li> </ul> Example usage<pre><code>var int i; i = GetIntArrayValue(self.HitChance, NPC_TALENT_1H);\n</code></pre>"},{"location":"externals/utils/#getstringarrayvalue","title":"GetStringArrayValue","text":"<p>Returns value of index in the array of strings.</p> <pre><code>func string GetStringArrayValue(var string arr, var int index) {};\n</code></pre> <ul> <li><code>arr</code> - array of strings</li> <li><code>index</code> - position of an element in an array</li> <li><code>return</code> - value of index</li> </ul> Example usage<pre><code>var string str; str = GetStringArrayValue(TXT_GUILDS, GIL_VLK);\n</code></pre>"},{"location":"externals/utils/#setintarrayvalue","title":"SetIntArrayValue","text":"<pre><code>func void SetIntArrayValue(var string arr, var int index, var int value) {};\n</code></pre> <ul> <li><code>arr</code> - array of integers</li> <li><code>index</code> - position of an element in an array</li> <li><code>value</code> - integer value to set</li> </ul> Example usage<pre><code>SetIntArrayValue(self.HitChance, NPC_TALENT_1H, 25);\n</code></pre>"},{"location":"externals/utils/#setstringarrayvalue","title":"SetStringArrayValue","text":"<pre><code>func void SetStringArrayValue(var string arr, var int index, var string value) {};\n</code></pre> <ul> <li><code>arr</code> - array of strings</li> <li><code>index</code> - position of an element in an array</li> <li><code>value</code> - string value to set</li> </ul> Example usage<pre><code>var string arr[2];\narr[0] = \"Test\";\narr[1] = \"Test2\";\nSetStringArrayValue(arr, 1, \"Test3\");\n</code></pre>"},{"location":"externals/vob/","title":"VOB - functions for object manipulation","text":""},{"location":"externals/vob/#vob_rotate","title":"Vob_Rotate","text":"<pre><code>func void Vob_Rotate(var string vobName, var C_Position vobPosition) {};\n</code></pre> <ul> <li><code>vobName</code></li> <li><code>vobPosition</code></li> </ul>"},{"location":"externals/vob/#vob_moveto","title":"Vob_MoveTo","text":"<pre><code>func void Vob_MoveTo(var string vobName, var string pointName) {};\n</code></pre> <ul> <li><code>vobName</code></li> <li><code>pointName</code></li> </ul>"},{"location":"externals/vob/#vob_setonfloor","title":"Vob_SetOnFloor","text":"<p>Sticks a vob with a specific name to the ground.</p> <pre><code>func void Vob_SetOnFloor(var string vobName) {};\n</code></pre> <ul> <li><code>vobName</code></li> </ul> Example usage<pre><code>Vob_SetOnFloor(\"CHEST_LOBART\");\n</code></pre>"},{"location":"externals/vob/#vob_setvisual","title":"Vob_SetVisual","text":"<p>Sets the visual of a specific vob in the game world.</p> <pre><code>func void Vob_SetVisual(var string vobName, var string visualName) {};\n</code></pre> <ul> <li><code>vobName</code></li> <li><code>visualName</code></li> </ul> Example usage<pre><code>Vob_SetVisual(\"CHEST_LOBART\", \"CHESTBIG_OCCHESTLARGELOCKED.MDS\");\n</code></pre>"},{"location":"externals/wld/","title":"WLD - world manipulation functions","text":""},{"location":"externals/wld/#wld_insertvob","title":"Wld_InsertVob","text":"<pre><code>func void Wld_InsertVob(var string vobName, var string pointName) {};\n</code></pre> <ul> <li><code>vobName</code></li> <li><code>pointName</code></li> </ul> Example usage<pre><code>Wld_InsertVob(\"SECRET_CHEST\", \"WP_START\");\n</code></pre>"},{"location":"externals/wld/#wld_insertmob","title":"Wld_InsertMob","text":"<pre><code>func void Wld_InsertMob(var string vobName, var string pointName) {};\n</code></pre> <ul> <li><code>vobName</code></li> <li><code>pointName</code></li> </ul> Example usage<pre><code>Wld_InsertMob(\"SIGNPOST\", \"WP_START\");\n</code></pre>"},{"location":"externals/wld/#wld_insertmobinter","title":"Wld_InsertMobInter","text":"<pre><code>func void Wld_InsertMobInter(var string vobName, var string pointName) {};\n</code></pre> <ul> <li><code>vobName</code></li> <li><code>pointName</code></li> </ul> Example usage<pre><code>Wld_InsertMobInter(\"EDDA_CAULDRON\", \"WP_START\");\n</code></pre>"},{"location":"externals/wld/#wld_insertmobcontainer","title":"Wld_InsertMobContainer","text":"<pre><code>func void Wld_InsertMobContainer(var string vobName, var string pointName) {};\n</code></pre> <ul> <li><code>vobName</code></li> <li><code>pointName</code></li> </ul> Example usage<pre><code>Wld_InsertMobContainer(\"CAVALORN_CHEST\", \"WP_START\");\n</code></pre>"},{"location":"externals/wld/#wld_insertmobfire","title":"Wld_InsertMobFire","text":"<pre><code>func void Wld_InsertMobFire(var string vobName, var string pointName) {};\n</code></pre> <ul> <li><code>vobName</code></li> <li><code>pointName</code></li> </ul> Example usage<pre><code>Wld_InsertMobFire(\"CAVALORN_CAMPFIRE\", \"WP_START\");\n</code></pre>"},{"location":"externals/wld/#wld_insertmobdoor","title":"Wld_InsertMobDoor","text":"<pre><code>func void Wld_InsertMobDoor(var string vobName, var string pointName) {};\n</code></pre> <ul> <li><code>vobName</code></li> <li><code>pointName</code></li> </ul> Example usage<pre><code>Wld_InsertMobDoor(\"BOSPER_HOUSE_DOOR\", \"NW_CITY_BOSPER_HOUSE_ENTRANCE\");\n</code></pre>"},{"location":"externals/wld/#wld_insertmobbed","title":"Wld_InsertMobBed","text":"<pre><code>func void Wld_InsertMobBed(var string vobName, var string pointName) {};\n</code></pre> <ul> <li><code>vobName</code></li> <li><code>pointName</code></li> </ul> Example usage<pre><code>Wld_InsertMobDoor(\"BOSPER_BED\", \"NW_CITY_BOSPER_HOUSE_BED\");\n</code></pre>"},{"location":"externals/wld/#wld_insertvobpos","title":"Wld_InsertVobPos","text":"<pre><code>func void Wld_InsertVobPos(var string vobName, var C_Position vobPosition) {};\n</code></pre> <ul> <li><code>vobName</code></li> <li><code>vobPosition</code></li> </ul> Example usage<pre><code>var C_Position pos; pos = Wld_GetPos(0, 0, 0);\nWld_InsertVobPos(\"SECRET_CHEST\", pos);\n</code></pre>"},{"location":"externals/wld/#wld_insertmobpos","title":"Wld_InsertMobPos","text":"<pre><code>func void Wld_InsertMobPos(var string vobName, var C_Position vobPosition) {};\n</code></pre> <ul> <li><code>vobName</code></li> <li><code>vobPosition</code></li> </ul> Example usage<pre><code>var C_Position pos; pos = Wld_GetPos(23120, 1400, 16795);\nWld_InsertMobPos(\"SIGNPOST\", pos);\n</code></pre>"},{"location":"externals/wld/#wld_insertmobinterpos","title":"Wld_InsertMobInterPos","text":"<pre><code>func void Wld_InsertMobInterPos(var string vobName, var C_Position vobPosition) {};\n</code></pre> <ul> <li><code>vobName</code></li> <li><code>vobPosition</code></li> </ul> Example usage<pre><code>var C_Position pos; pos = Wld_GetPos(16795, 1400, 23120);\nWld_InsertMobInterPos(\"EDDA_CAULDRON\", pos);\n</code></pre>"},{"location":"externals/wld/#wld_insertmobcontainerpos","title":"Wld_InsertMobContainerPos","text":"<pre><code>func void Wld_InsertMobContainerPos(var string vobName, var C_Position vobPosition) {};\n</code></pre> <ul> <li><code>vobName</code></li> <li><code>vobPosition</code></li> </ul> Example usage<pre><code>var C_Position pos; pos = Wld_GetPos(16795, 23120, 1400);\nWld_InsertMobContainerPos(\"CAVALORN_CHEST\", pos);\n</code></pre>"},{"location":"externals/wld/#wld_insertmobfirepos","title":"Wld_InsertMobFirePos","text":"<pre><code>func void Wld_InsertMobFirePos(var string vobName, var C_Position vobPosition) {};\n</code></pre> <ul> <li><code>vobName</code></li> <li><code>vobPosition</code></li> </ul> Example usage<pre><code>var C_Position pos; pos = Wld_GetPos(16795, 23120, 1400);\nWld_InsertMobFirePos(\"CAVALORN_CAMPFIRE\", pos);\n</code></pre>"},{"location":"externals/wld/#wld_insertmobdoorpos","title":"Wld_InsertMobDoorPos","text":"<pre><code>func void Wld_InsertMobDoorPos(var string vobName, var C_Position vobPosition) {};\n</code></pre> <ul> <li><code>vobName</code></li> <li><code>vobPosition</code></li> </ul> Example usage<pre><code>var C_Position pos; pos = Wld_GetPos(1400, 16795, 23120);\nWld_InsertMobDoorPos(\"BOSPER_HOUSE_DOOR\", pos);\n</code></pre>"},{"location":"externals/wld/#wld_insertmobbedpos","title":"Wld_InsertMobBedPos","text":"<pre><code>func void Wld_InsertMobBedPos(var string vobName, var C_Position vobPosition) {};\n</code></pre> <ul> <li><code>vobName</code></li> <li><code>vobPosition</code></li> </ul> Example usage<pre><code>var C_Position pos; pos = Wld_GetPos(1400, 16795, 23120);\nWld_InsertMobBedPos(\"BOSPER_BED\", pos);\n</code></pre>"},{"location":"externals/wld/#wld_removevob","title":"Wld_RemoveVob","text":"<p>Removes a specific vob from the game world.</p> <pre><code>func int Wld_RemoveVob(var string vobName) {};\n</code></pre> <ul> <li><code>vobName</code></li> <li><code>return</code> - <code>TRUE</code> if the vob has been correctly removed, <code>FALSE</code> otherwise</li> </ul> <pre><code>if (Wld_RemoveVob(\"CHEST_LOBART\"))\n{\n    Print(\"Vob successfully removed\");\n};\n</code></pre>"},{"location":"externals/wld/#wld_getpos","title":"Wld_GetPos","text":"<p>Returns an object representing a set of points or angles.</p> <pre><code>func C_Position Wld_GetPos(var int posX, var int posY, vart int posZ) {};\n</code></pre> <ul> <li><code>posX</code> - point or angle in X axis</li> <li><code>posY</code> - point or angle in Y axis</li> <li><code>posZ</code> - point or angle in Z axis</li> <li><code>return</code> - C_Position</li> </ul> Example usage<pre><code>var C_Position pos; pos = Wld_GetPos(0, 180, 0);\n</code></pre>"},{"location":"externals/wld/#wld_getplayerportalroom","title":"Wld_GetPlayerPortalRoom","text":"<p>Returns name of portal room where the player currently is.</p> <pre><code>func string Wld_GetPlayerPortalRoom() {};\n</code></pre> <ul> <li><code>return</code> - name of player's portal room</li> </ul> Example usage<pre><code>var string playerPortalRoom;\nplayerPortalRoom = Wld_GetPlayerPortalRoom();\n\nif (Hlp_StrCmp(playerPortalRoom, \"h\u00fctte2\"))\n{\n    //...\n};\n</code></pre>"},{"location":"hooks/","title":"Hooks","text":"<p>Soon!</p>"}]}